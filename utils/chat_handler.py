import streamlit as st
import openai
from datetime import datetime
import os
from dotenv import load_dotenv

# Load environment variables
load_dotenv()

class ChatHandler:
    def __init__(self):
        self.api_key = os.getenv("OPENAI_API_KEY")
        if not self.api_key:
            try:
                self.api_key = st.secrets.get("OPENAI_API_KEY", "")
            except Exception:
                self.api_key = ""
        
        if self.api_key:
            openai.api_key = self.api_key
        else:
            st.warning("‚ö†Ô∏è Ch∆∞a c·∫•u h√¨nh OpenAI API Key. ·ª®ng d·ª•ng s·∫Ω ch·∫°y ·ªü ch·∫ø ƒë·ªô demo.")
    
    def generate_response(self, user_input, chat_history, document_context=""):
        """T·∫°o ph·∫£n h·ªìi t·ª´ AI"""
        
        # N·∫øu kh√¥ng c√≥ API key, tr·∫£ v·ªÅ ph·∫£n h·ªìi demo
        if not self.api_key:
            return self._generate_demo_response(user_input, document_context)
        
        try:
            # Chu·∫©n b·ªã messages cho OpenAI
            messages = [
                {
                    "role": "system",
                    "content": self._create_system_prompt(document_context)
                }
            ]
            
            # Th√™m l·ªãch s·ª≠ chat (gi·ªõi h·∫°n 10 tin nh·∫Øn g·∫ßn nh·∫•t)
            recent_history = chat_history[-10:] if len(chat_history) > 10 else chat_history
            for msg in recent_history:
                messages.append({
                    "role": msg["role"],
                    "content": msg["content"]
                })
            
            # Th√™m tin nh·∫Øn hi·ªán t·∫°i
            messages.append({
                "role": "user",
                "content": user_input
            })
            
            # G·ªçi OpenAI API
            response = openai.ChatCompletion.create(
                model="gpt-3.5-turbo",
                messages=messages,
                max_tokens=1000,
                temperature=0.7,
                stream=False
            )
            
            return response.choices[0].message.content
            
        except Exception as e:
            st.error(f"L·ªói khi g·ªçi OpenAI API: {str(e)}")
            return "Xin l·ªói, t√¥i ƒëang g·∫∑p s·ª± c·ªë k·ªπ thu·∫≠t. Vui l√≤ng th·ª≠ l·∫°i sau."
    
    def _create_system_prompt(self, document_context):
        """T·∫°o system prompt"""
        base_prompt = """B·∫°n l√† m·ªôt AI assistant th√¥ng minh v√† h·ªØu √≠ch. H√£y tr·∫£ l·ªùi c√°c c√¢u h·ªèi m·ªôt c√°ch chi ti·∫øt v√† ch√≠nh x√°c. S·ª≠ d·ª•ng ti·∫øng Vi·ªát ƒë·ªÉ tr·∫£ l·ªùi."""
        
        if document_context:
            base_prompt += f"""
            
TH√îNG TIN T√ÄI LI·ªÜU:
Ng∆∞·ªùi d√πng ƒë√£ upload c√°c t√†i li·ªáu sau. H√£y s·ª≠ d·ª•ng th√¥ng tin n√†y ƒë·ªÉ tr·∫£ l·ªùi c√¢u h·ªèi khi ph√π h·ª£p:

{document_context[:3000]}...

Khi tr·∫£ l·ªùi d·ª±a tr√™n t√†i li·ªáu, h√£y ghi r√µ b·∫°n ƒëang tham kh·∫£o t·ª´ t√†i li·ªáu ƒë√£ upload.
"""
        
        return base_prompt
    
    def _generate_demo_response(self, user_input, document_context):
        """T·∫°o ph·∫£n h·ªìi demo khi kh√¥ng c√≥ API key"""
        if document_context:
            return f"""ü§ñ **Ph·∫£n h·ªìi Demo v·ªõi T√†i li·ªáu**

C√¢u h·ªèi c·ªßa b·∫°n: "{user_input}"

D·ª±a tr√™n t√†i li·ªáu b·∫°n ƒë√£ upload, t√¥i c√≥ th·ªÉ th·∫•y:
- T√†i li·ªáu ch·ª©a {len(document_context)} k√Ω t·ª±
- N·ªôi dung li√™n quan ƒë·∫øn c√¢u h·ªèi c·ªßa b·∫°n

**L∆∞u √Ω:** ƒê√¢y l√† ch·∫ø ƒë·ªô demo. ƒê·ªÉ c√≥ tr·∫£i nghi·ªám ƒë·∫ßy ƒë·ªß, vui l√≤ng c·∫•u h√¨nh OpenAI API Key trong file `.env` ho·∫∑c Streamlit secrets.

**C√°ch c·∫•u h√¨nh:**
1. T·∫°o file `.env` trong th∆∞ m·ª•c g·ªëc
2. Th√™m d√≤ng: `OPENAI_API_KEY=your-api-key-here`
3. Ho·∫∑c th√™m v√†o Streamlit secrets: `OPENAI_API_KEY = "your-api-key-here"`

Preview n·ªôi dung t√†i li·ªáu: {document_context[:200]}..."""
        
        return f"""ü§ñ **Ph·∫£n h·ªìi Demo**

C√¢u h·ªèi c·ªßa b·∫°n: "{user_input}"

Xin ch√†o! T√¥i l√† ChatGPT Clone ƒë∆∞·ª£c x√¢y d·ª±ng b·∫±ng Streamlit. Hi·ªán t·∫°i ƒëang ch·∫°y ·ªü ch·∫ø ƒë·ªô demo.

**T√≠nh nƒÉng c√≥ s·∫µn:**
- ‚úÖ Giao di·ªán chat gi·ªëng ChatGPT
- ‚úÖ Upload v√† x·ª≠ l√Ω t√†i li·ªáu (PDF, DOCX, TXT, MD)
- ‚úÖ L∆∞u l·ªãch s·ª≠ chat
- ‚úÖ Sidebar qu·∫£n l√Ω t√†i li·ªáu

**ƒê·ªÉ k√≠ch ho·∫°t AI th·∫≠t:**
1. T·∫°o file `.env` v·ªõi: `OPENAI_API_KEY=your-key`
2. Ho·∫∑c c·∫•u h√¨nh trong Streamlit secrets

Th·ªùi gian: {datetime.now().strftime('%H:%M:%S %d/%m/%Y')}"""
